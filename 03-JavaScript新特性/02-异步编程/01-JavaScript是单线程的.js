/**
 * JavaScript是单线程的
 */

/*
 * JavaScript是单线程的, 所以JS代码都是串行执行的, 即前面没有执行完毕, 后面不能执行;
 * 但是有时候JS代码的执行结果看上去又不是串行的, 比如下面的这个例子;
 * 这是因为JS有同步代码和异步代码的区分, 除了"事件绑定的函数"和"回调函数"以外的都是同步代码;
 * 同步代码会被立即执行, 而异步代码会被JS进行事件循环; 即, JS依然是串行地执行代码,
 * 只不过在执行异步代码时, 并不是直接执行里面的逻辑, 而是将异步代码放入JS事件循环的逻辑中,
 * 待条件满足, 再去执行异步代码内部的逻辑(在下面的例子中, 这个"条件", 是"等待了1秒");
 */

console.log("1")  // 同步代码

setTimeout(function () {  // 这是回调函数, 是异步代码
    console.log("2")
}, 1000)

console.log("3")  // 同步代码

// 最后输出结果为: 1 3 2
